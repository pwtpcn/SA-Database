generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model receipt {
  id            Int             @id @default(autoincrement())
  receipt_date  DateTime        @db.Timestamp(6)
  total_price   Float           @db.Real
  supplier_id   Int?
  confirmation  String?         @db.VarChar(80)
  delivery_note delivery_note[]
  supplier      supplier?       @relation(fields: [supplier_id], references: [supplier_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_supplier")
}

model supplier {
  supplier_id   Int             @id @default(autoincrement())
  supplier_name String          @db.VarChar(80)
  tax_number    Decimal         @db.Decimal(13, 0)
  user_id       String?         @db.Uuid
  delivery_note delivery_note[]
  quotation     quotation[]
  receipt       receipt[]
  user          user?           @relation(fields: [user_id], references: [uuid], map: "user_id")
}

model quotation {
  id            Int             @id @default(autoincrement())
  unit          Int
  price         Float           @db.Real
  total_price   Float           @db.Real
  factory_sign  String          @db.VarChar(80)
  supplier_sign String?         @db.VarChar(80)
  creation_date DateTime        @db.Timestamp(6)
  accept_date   DateTime?       @db.Timestamp(6)
  supplier_id   Int
  status        QuotationStatus @default(Considered)
  delivery_note delivery_note[]
  supplier      supplier        @relation(fields: [supplier_id], references: [supplier_id], onDelete: NoAction, onUpdate: NoAction)
}

model delivery_note {
  id                 Int        @id @default(autoincrement())
  quotation_id       Int?
  sender_name        String     @db.VarChar(80)
  purchase_date      DateTime?  @db.Timestamp(6)
  reciever_signature String?    @db.VarChar(80)
  reciever_name      String?    @db.VarChar(80)
  receipt_id         Int?
  supplier_id        Int?
  quotation          quotation? @relation(fields: [quotation_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  receipt            receipt?   @relation(fields: [receipt_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  supplier           supplier?  @relation(fields: [supplier_id], references: [supplier_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_supplier")
}

model user {
  uuid     String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username String     @unique @db.VarChar(80)
  password String     @db.VarChar(512)
  salt     String     @db.VarChar(255)
  priority Int        @default(0)
  supplier supplier[]
}

enum QuotationStatus {
  Accept
  Reject
  Considered
}
